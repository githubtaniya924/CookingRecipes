// <auto-generated />
using CookingRecipes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingRecipes.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250905112236_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookingRecipes.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basmati Rice",
                            Quantity = 250,
                            RecipeId = 1,
                            Unit = "grams"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mixed Vegetables",
                            Quantity = 200,
                            RecipeId = 1,
                            Unit = "grams"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Biryani Masala",
                            Quantity = 2,
                            RecipeId = 1,
                            Unit = "tbsp"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pasta",
                            Quantity = 200,
                            RecipeId = 2,
                            Unit = "grams"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cream",
                            Quantity = 100,
                            RecipeId = 2,
                            Unit = "ml"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Parmesan Cheese",
                            Quantity = 50,
                            RecipeId = 2,
                            Unit = "grams"
                        });
                });

            modelBuilder.Entity("CookingRecipes.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cuisine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Tips")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cuisine = "Indian",
                            Description = "A flavorful rice dish with spices and mixed vegetables.",
                            ImageUrl = "https://i.ytimg.com/vi/Do7ZdUodDdw/maxresdefault.jpg",
                            Rating = 4.5,
                            Servings = 4,
                            Tips = "Serve hot with raita for best taste.",
                            Title = "Veg Biryani"
                        },
                        new
                        {
                            Id = 2,
                            Cuisine = "Italian",
                            Description = "Creamy Alfredo pasta with parmesan cheese.",
                            ImageUrl = "https://images.aws.nestle.recipes/resized/0a0717810b73a1672a029c29788e557b_creamy_alfredo_pasta_long_left_1200_628.jpg",
                            Rating = 4.2000000000000002,
                            Servings = 2,
                            Tips = "Add garlic bread for extra flavor.",
                            Title = "Pasta Alfredo"
                        });
                });

            modelBuilder.Entity("CookingRecipes.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Wash and soak rice for 30 mins.",
                            RecipeId = 1,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Cook vegetables with spices.",
                            RecipeId = 1,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Layer rice and veggies, cook on dum.",
                            RecipeId = 1,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Boil pasta until al dente.",
                            RecipeId = 2,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 5,
                            Instruction = "Prepare Alfredo sauce with cream and cheese.",
                            RecipeId = 2,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 6,
                            Instruction = "Mix pasta with sauce and serve hot.",
                            RecipeId = 2,
                            StepNumber = 3
                        });
                });

            modelBuilder.Entity("CookingRecipes.Models.Ingredient", b =>
                {
                    b.HasOne("CookingRecipes.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("CookingRecipes.Models.Step", b =>
                {
                    b.HasOne("CookingRecipes.Models.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("CookingRecipes.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
